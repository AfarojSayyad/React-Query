{"ast":null,"code":"var _jsxFileName = \"/home/sagar/Internship_Work/Afroj React Query/React-Query/src/components/DynamicParallel.page.js\",\n    _s = $RefreshSig$();\n\nimport { useQueries } from \"react-query\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fetchSuperHero = heroId => {\n  return axios.get(`http://localhost:3000/superheroes/${heroId}`);\n};\n\nexport const DynamicParallelPage = _ref => {\n  _s();\n\n  let {\n    heroIds\n  } = _ref;\n  const queryResults = useQueries(heroIds.map(id => {\n    return {\n      queryKey: ['super-hero', id],\n      queryFn: () => fetchSuperHero(id)\n    };\n  }));\n  console.log({\n    queryResults\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dynamic Prallel Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), queryResults === null || queryResults === void 0 ? void 0 : queryResults.map(hero => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"ssds wdwedw\", hero.queryResults]\n      }, hero.queryResults, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true);\n}; // export const DynamicParallelPage = () => {\n//     return (\n//     <div>\n//         <h1>Dynamic Prallel Page</h1>\n//     </div>\n//     )\n// }\n\n_s(DynamicParallelPage, \"9yrXdFr24BK0OZ0yktYJVJchw8k=\", false, function () {\n  return [useQueries];\n});\n\n_c = DynamicParallelPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DynamicParallelPage\");","map":{"version":3,"names":["useQueries","axios","fetchSuperHero","heroId","get","DynamicParallelPage","heroIds","queryResults","map","id","queryKey","queryFn","console","log","hero"],"sources":["/home/sagar/Internship_Work/Afroj React Query/React-Query/src/components/DynamicParallel.page.js"],"sourcesContent":["import { useQueries } from \"react-query\";\nimport axios from \"axios\";\n\nconst fetchSuperHero = (heroId) =>{\n    return axios.get(`http://localhost:3000/superheroes/${heroId}`)\n}\n\nexport const DynamicParallelPage = ({heroIds}) => {\n    const queryResults = useQueries(\n        heroIds.map((id) => {\n            return {\n                queryKey:[ 'super-hero', id],\n                queryFn: () => fetchSuperHero(id),\n            }\n        })\n    ) \n\n    console.log({ queryResults });\n    return (\n    <>\n        <h1>Dynamic Prallel Page</h1>\n        {/* <div>{heroIds.queryResults}</div> */}\n        {/* {queryResults?.map((hero)=>{\n                return <div key={hero.name}>\n                   {hero.name}\n                </div>\n            })} */}\n\n            {queryResults?.map((hero)=>\n            {\n                return <div key={hero.queryResults}>\n                    ssds\n                    wdwedw\n                    {hero.queryResults}\n                </div>\n            }\n            )}\n\n        {/* <div>{JSON.stringify(queryResults)}</div> */}\n        {/* <div>{data.map.queryResults}</div> */}\n        \n    </>\n    )\n}\n// export const DynamicParallelPage = () => {\n//     return (\n//     <div>\n//         <h1>Dynamic Prallel Page</h1>\n//     </div>\n//     )\n// }"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,cAAc,GAAIC,MAAD,IAAW;EAC9B,OAAOF,KAAK,CAACG,GAAN,CAAW,qCAAoCD,MAAO,EAAtD,CAAP;AACH,CAFD;;AAIA,OAAO,MAAME,mBAAmB,GAAG,QAAe;EAAA;;EAAA,IAAd;IAACC;EAAD,CAAc;EAC9C,MAAMC,YAAY,GAAGP,UAAU,CAC3BM,OAAO,CAACE,GAAR,CAAaC,EAAD,IAAQ;IAChB,OAAO;MACHC,QAAQ,EAAC,CAAE,YAAF,EAAgBD,EAAhB,CADN;MAEHE,OAAO,EAAE,MAAMT,cAAc,CAACO,EAAD;IAF1B,CAAP;EAIH,CALD,CAD2B,CAA/B;EASAG,OAAO,CAACC,GAAR,CAAY;IAAEN;EAAF,CAAZ;EACA,oBACA;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EASSA,YATT,aASSA,YATT,uBASSA,YAAY,CAAEC,GAAd,CAAmBM,IAAD,IACnB;MACI,oBAAO;QAAA,0BAGFA,IAAI,CAACP,YAHH;MAAA,GAAUO,IAAI,CAACP,YAAf;QAAA;QAAA;QAAA;MAAA,QAAP;IAKH,CAPA,CATT;EAAA,gBADA;AAyBH,CApCM,C,CAqCP;AACA;AACA;AACA;AACA;AACA;AACA;;GA3CaF,mB;UACYL,U;;;KADZK,mB"},"metadata":{},"sourceType":"module"}