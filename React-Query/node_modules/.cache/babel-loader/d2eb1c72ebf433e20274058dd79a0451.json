{"ast":null,"code":"var _s = $RefreshSig$();\n\n// import { useQuery, useQueryClient  } from \"react-query\";\n// import axios from \"axios\";\n// const fetchSuperHero = (heroId) =>\n// {\n//     return axios.get(`http://localhost:3000/superheroes/${heroId}`)\n// }\n// export const useSuperHeroData =(heroId) =>\n// {\n//     return useQuery(['super-hero', heroId], ()=>fetchSuperHero(heroId))\n// }\nimport { useQuery, useQueryClient } from 'react-query';\nimport axios from 'axios';\n\nconst fetchSuperHero = _ref => {\n  let {\n    queryKey\n  } = _ref;\n  const heroId = queryKey[1];\n  return axios.get(`http://localhost:3000/superheroes/${heroId}`);\n};\n\nexport const useSuperHeroData = heroId => {\n  _s();\n\n  const queryClient = useQueryClient();\n  return useQuery(['super-hero', heroId], fetchSuperHero, {\n    initialData: () => {\n      var _queryClient$getQuery, _queryClient$getQuery2;\n\n      const hero = (_queryClient$getQuery = queryClient.getQueryData('super-heroes')) === null || _queryClient$getQuery === void 0 ? void 0 : (_queryClient$getQuery2 = _queryClient$getQuery.data) === null || _queryClient$getQuery2 === void 0 ? void 0 : _queryClient$getQuery2.find(hero => hero.id === parseInt(heroId));\n\n      if (hero) {\n        return {\n          data: hero\n        };\n      } else {\n        return undefined;\n      }\n    }\n  });\n};\n\n_s(useSuperHeroData, \"BLZt64a2VVrVbN4W5DyNUDE4KQk=\", false, function () {\n  return [useQueryClient, useQuery];\n});","map":{"version":3,"names":["useQuery","useQueryClient","axios","fetchSuperHero","queryKey","heroId","get","useSuperHeroData","queryClient","initialData","hero","getQueryData","data","find","id","parseInt","undefined"],"sources":["/home/sagar/Internship_Work/Afroj React Query/React-Query/src/components/hooks/useSuperHeroData.js"],"sourcesContent":["// import { useQuery, useQueryClient  } from \"react-query\";\n// import axios from \"axios\";\n\n// const fetchSuperHero = (heroId) =>\n// {\n//     return axios.get(`http://localhost:3000/superheroes/${heroId}`)\n// }\n\n// export const useSuperHeroData =(heroId) =>\n// {\n//     return useQuery(['super-hero', heroId], ()=>fetchSuperHero(heroId))\n\n// }\nimport { useQuery, useQueryClient } from 'react-query'\nimport axios from 'axios'\n\nconst fetchSuperHero = ({ queryKey }) => {\n  const heroId = queryKey[1]\n  return axios.get(`http://localhost:3000/superheroes/${heroId}`)\n}\n\nexport const useSuperHeroData = heroId => {\n  const queryClient = useQueryClient()\n  return useQuery(['super-hero', heroId], fetchSuperHero, {\n    initialData: () => {\n      const hero = queryClient\n        .getQueryData('super-heroes')\n        ?.data?.find(hero => hero.id === parseInt(heroId))\n      if (hero) {\n        return { data: hero }\n      } else {\n        return undefined\n      }\n    }\n  })\n}"],"mappings":";;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA,SAASA,QAAT,EAAmBC,cAAnB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAG,QAAkB;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACvC,MAAMC,MAAM,GAAGD,QAAQ,CAAC,CAAD,CAAvB;EACA,OAAOF,KAAK,CAACI,GAAN,CAAW,qCAAoCD,MAAO,EAAtD,CAAP;AACD,CAHD;;AAKA,OAAO,MAAME,gBAAgB,GAAGF,MAAM,IAAI;EAAA;;EACxC,MAAMG,WAAW,GAAGP,cAAc,EAAlC;EACA,OAAOD,QAAQ,CAAC,CAAC,YAAD,EAAeK,MAAf,CAAD,EAAyBF,cAAzB,EAAyC;IACtDM,WAAW,EAAE,MAAM;MAAA;;MACjB,MAAMC,IAAI,4BAAGF,WAAW,CACrBG,YADU,CACG,cADH,CAAH,oFAAG,sBAETC,IAFM,2DAAG,uBAEHC,IAFG,CAEEH,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYC,QAAQ,CAACV,MAAD,CAF9B,CAAb;;MAGA,IAAIK,IAAJ,EAAU;QACR,OAAO;UAAEE,IAAI,EAAEF;QAAR,CAAP;MACD,CAFD,MAEO;QACL,OAAOM,SAAP;MACD;IACF;EAVqD,CAAzC,CAAf;AAYD,CAdM;;GAAMT,gB;UACSN,c,EACbD,Q"},"metadata":{},"sourceType":"module"}