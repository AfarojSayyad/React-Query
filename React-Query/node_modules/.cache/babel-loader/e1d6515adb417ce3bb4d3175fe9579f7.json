{"ast":null,"code":"var _jsxFileName = \"/home/sagar/Internship_Work/Afroj React Query/React-Query/src/components/PaginatedQueries.page.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fetchColors = pageNumber => {\n  return axios.get(` http://localhost:3000/colors?_limit=2&_page=${pageNumber}`);\n};\n\nexport const PaginatedQueriesPage = () => {\n  _s();\n\n  const [pageNumber, setPageNumber] = useState(1);\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isFetching\n  } = useQuery(['colors', pageNumber], () => fetchColors(pageNumber), {\n    //c: If we use this then react query will maintain the data from the last successful \n    //fetch while the new data is beng requested eventhough the query key has been changed.\n    //   and when the data arrives the previous data is seemlessly swapped to show the new data\n    keepPreviousData: true\n  });\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: data === null || data === void 0 ? void 0 : data.data.map(color => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [color.id, \".\", color.label]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 27\n          }, this)\n        }, color.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 23\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPageNumber(page => page - 1),\n        disabled: pageNumber === 1,\n        children: \"Previous Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPageNumber(page => page + 1),\n        disabled: pageNumber === 4,\n        children: \"Next Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), isFetching && 'Loading']\n  }, void 0, true);\n};\n\n_s(PaginatedQueriesPage, \"+561nMc0CmvWNUz4rv9zLEjkwvE=\", false, function () {\n  return [useQuery];\n});\n\n_c = PaginatedQueriesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginatedQueriesPage\");","map":{"version":3,"names":["useState","useQuery","axios","fetchColors","pageNumber","get","PaginatedQueriesPage","setPageNumber","isLoading","isError","error","data","isFetching","keepPreviousData","message","map","color","id","label","page"],"sources":["/home/sagar/Internship_Work/Afroj React Query/React-Query/src/components/PaginatedQueries.page.js"],"sourcesContent":["import { useState } from 'react'\nimport { useQuery } from 'react-query'\nimport axios from 'axios'\n\nconst fetchColors = (pageNumber) => {\n  return axios.get(` http://localhost:3000/colors?_limit=2&_page=${pageNumber}`)\n}\n\nexport const PaginatedQueriesPage = () => {\n  const [pageNumber, setPageNumber] = useState(1)\n  const { isLoading, isError, error, data, isFetching } = useQuery(['colors',pageNumber],\n    \n    ()=>fetchColors (pageNumber),\n    {\n      //c: If we use this then react query will maintain the data from the last successful \n      //fetch while the new data is beng requested eventhough the query key has been changed.\n    //   and when the data arrives the previous data is seemlessly swapped to show the new data\n\n      keepPreviousData: true\n    }\n  )\n\n  if (isLoading) {\n    return <h2>Loading...</h2>\n  }\n\n  if (isError) {\n    return <h2>{error.message}</h2>\n  }\n\n  return (\n    <>\n      <div>\n          {\n              data?.data.map((color)=>{\n                  return(\n                      <div key={color.id}>\n                          <h2>\n                              {color.id}.{color.label}\n                          </h2>\n                      </div>\n                  )\n              })\n          }\n\n      </div>\n      <div>\n        <button\n          onClick={() => setPageNumber((page) => page - 1)}\n          disabled={pageNumber === 1}>\n          Previous Page\n        </button>\n        <button\n          onClick={() => setPageNumber((page) => page + 1)}\n          disabled={pageNumber === 4}>\n          Next Page\n        </button>\n      </div>\n      {isFetching && 'Loading'}\n    </>\n  )\n}"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,WAAW,GAAIC,UAAD,IAAgB;EAClC,OAAOF,KAAK,CAACG,GAAN,CAAW,gDAA+CD,UAAW,EAArE,CAAP;AACD,CAFD;;AAIA,OAAO,MAAME,oBAAoB,GAAG,MAAM;EAAA;;EACxC,MAAM,CAACF,UAAD,EAAaG,aAAb,IAA8BP,QAAQ,CAAC,CAAD,CAA5C;EACA,MAAM;IAAEQ,SAAF;IAAaC,OAAb;IAAsBC,KAAtB;IAA6BC,IAA7B;IAAmCC;EAAnC,IAAkDX,QAAQ,CAAC,CAAC,QAAD,EAAUG,UAAV,CAAD,EAE9D,MAAID,WAAW,CAAEC,UAAF,CAF+C,EAG9D;IACE;IACA;IACF;IAEES,gBAAgB,EAAE;EALpB,CAH8D,CAAhE;;EAYA,IAAIL,SAAJ,EAAe;IACb,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,IAAIC,OAAJ,EAAa;IACX,oBAAO;MAAA,UAAKC,KAAK,CAACI;IAAX;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAA,wBACE;MAAA,UAEQH,IAFR,aAEQA,IAFR,uBAEQA,IAAI,CAAEA,IAAN,CAAWI,GAAX,CAAgBC,KAAD,IAAS;QACpB,oBACI;UAAA,uBACI;YAAA,WACKA,KAAK,CAACC,EADX,OACgBD,KAAK,CAACE,KADtB;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ,GAAUF,KAAK,CAACC,EAAhB;UAAA;UAAA;UAAA;QAAA,QADJ;MAOH,CARD;IAFR;MAAA;MAAA;MAAA;IAAA,QADF,eAeE;MAAA,wBACE;QACE,OAAO,EAAE,MAAMV,aAAa,CAAEY,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAD9B;QAEE,QAAQ,EAAEf,UAAU,KAAK,CAF3B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAME;QACE,OAAO,EAAE,MAAMG,aAAa,CAAEY,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAD9B;QAEE,QAAQ,EAAEf,UAAU,KAAK,CAF3B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QAfF,EA2BGQ,UAAU,IAAI,SA3BjB;EAAA,gBADF;AA+BD,CArDM;;GAAMN,oB;UAE6CL,Q;;;KAF7CK,oB"},"metadata":{},"sourceType":"module"}